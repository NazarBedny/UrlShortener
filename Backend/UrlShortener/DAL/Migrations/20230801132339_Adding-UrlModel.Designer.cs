// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(UrlShortenerContext))]
    [Migration("20230801132339_Adding-UrlModel")]
    partial class AddingUrlModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47cf14c1-6ab0-40d3-b48b-de72c8559976"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("aba6e585-7cef-4efa-80be-6338ded67baf"),
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("85cd66d7-2998-4f29-8319-f9cfc08859c7"),
                            Name = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("DAL.Model.UrlModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OriginalURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortenedURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UrlModels");
                });

            modelBuilder.Entity("DAL.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f45cab0a-301d-4aae-97de-4764fb9e92da"),
                            Email = "alex.admin@gmail.com",
                            Name = "Alex",
                            PasswordHash = new byte[] { 42, 59, 35, 247, 158, 99, 121, 124, 251, 45, 164, 174, 30, 138, 204, 229, 118, 34, 95, 239, 119, 85, 187, 219, 116, 28, 31, 251, 167, 184, 181, 94, 228, 107, 220, 42, 28, 253, 220, 240, 208, 93, 155, 209, 167, 167, 232, 213, 104, 12, 111, 140, 32, 182, 129, 247, 247, 188, 76, 46, 178, 100, 144, 9 },
                            PasswordSalt = new byte[] { 113, 85, 230, 57, 73, 243, 45, 122, 15, 220, 174, 193, 22, 156, 76, 193, 4, 155, 11, 41, 223, 171, 76, 223, 117, 57, 135, 22, 97, 86, 122, 198, 97, 36, 34, 96, 190, 229, 172, 51, 86, 251, 249, 28, 170, 200, 72, 195, 112, 145, 138, 186, 21, 177, 160, 143, 148, 193, 10, 71, 101, 139, 103, 233, 157, 183, 27, 143, 9, 135, 22, 226, 254, 50, 237, 63, 85, 79, 63, 25, 107, 65, 43, 25, 171, 55, 67, 50, 4, 195, 206, 175, 213, 48, 195, 31, 190, 157, 78, 250, 255, 37, 123, 78, 214, 197, 201, 180, 189, 26, 15, 121, 5, 180, 213, 191, 76, 149, 195, 221, 4, 27, 140, 89, 191, 13, 206, 110 },
                            RoleId = new Guid("aba6e585-7cef-4efa-80be-6338ded67baf"),
                            Surname = "Admin"
                        },
                        new
                        {
                            Id = new Guid("fef6da98-e7db-42bf-ae17-e7c879ccb77f"),
                            Email = "roma.user@gmail.com",
                            Name = "Roma",
                            PasswordHash = new byte[] { 42, 59, 35, 247, 158, 99, 121, 124, 251, 45, 164, 174, 30, 138, 204, 229, 118, 34, 95, 239, 119, 85, 187, 219, 116, 28, 31, 251, 167, 184, 181, 94, 228, 107, 220, 42, 28, 253, 220, 240, 208, 93, 155, 209, 167, 167, 232, 213, 104, 12, 111, 140, 32, 182, 129, 247, 247, 188, 76, 46, 178, 100, 144, 9 },
                            PasswordSalt = new byte[] { 113, 85, 230, 57, 73, 243, 45, 122, 15, 220, 174, 193, 22, 156, 76, 193, 4, 155, 11, 41, 223, 171, 76, 223, 117, 57, 135, 22, 97, 86, 122, 198, 97, 36, 34, 96, 190, 229, 172, 51, 86, 251, 249, 28, 170, 200, 72, 195, 112, 145, 138, 186, 21, 177, 160, 143, 148, 193, 10, 71, 101, 139, 103, 233, 157, 183, 27, 143, 9, 135, 22, 226, 254, 50, 237, 63, 85, 79, 63, 25, 107, 65, 43, 25, 171, 55, 67, 50, 4, 195, 206, 175, 213, 48, 195, 31, 190, 157, 78, 250, 255, 37, 123, 78, 214, 197, 201, 180, 189, 26, 15, 121, 5, 180, 213, 191, 76, 149, 195, 221, 4, 27, 140, 89, 191, 13, 206, 110 },
                            RoleId = new Guid("47cf14c1-6ab0-40d3-b48b-de72c8559976"),
                            Surname = "User"
                        },
                        new
                        {
                            Id = new Guid("0370d822-13a5-4767-aa6d-d234243d632b"),
                            Email = "anatoliy.superadmin@gmail.com",
                            Name = "Anatoliy",
                            PasswordHash = new byte[] { 42, 59, 35, 247, 158, 99, 121, 124, 251, 45, 164, 174, 30, 138, 204, 229, 118, 34, 95, 239, 119, 85, 187, 219, 116, 28, 31, 251, 167, 184, 181, 94, 228, 107, 220, 42, 28, 253, 220, 240, 208, 93, 155, 209, 167, 167, 232, 213, 104, 12, 111, 140, 32, 182, 129, 247, 247, 188, 76, 46, 178, 100, 144, 9 },
                            PasswordSalt = new byte[] { 113, 85, 230, 57, 73, 243, 45, 122, 15, 220, 174, 193, 22, 156, 76, 193, 4, 155, 11, 41, 223, 171, 76, 223, 117, 57, 135, 22, 97, 86, 122, 198, 97, 36, 34, 96, 190, 229, 172, 51, 86, 251, 249, 28, 170, 200, 72, 195, 112, 145, 138, 186, 21, 177, 160, 143, 148, 193, 10, 71, 101, 139, 103, 233, 157, 183, 27, 143, 9, 135, 22, 226, 254, 50, 237, 63, 85, 79, 63, 25, 107, 65, 43, 25, 171, 55, 67, 50, 4, 195, 206, 175, 213, 48, 195, 31, 190, 157, 78, 250, 255, 37, 123, 78, 214, 197, 201, 180, 189, 26, 15, 121, 5, 180, 213, 191, 76, 149, 195, 221, 4, 27, 140, 89, 191, 13, 206, 110 },
                            RoleId = new Guid("85cd66d7-2998-4f29-8319-f9cfc08859c7"),
                            Surname = "Superadmin"
                        });
                });

            modelBuilder.Entity("DAL.Model.User", b =>
                {
                    b.HasOne("DAL.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DAL.Model.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
